require 'rss'
require 'open-uri'
require 'pp'

module Rssop
  class Rssop
    attr_reader :content
    
    @@config = { 1 => { :url => "https://dev.toppers.jp/trac/tecs/report/1?asc=1&amp;format=rss",
                         :user => "ykominami",
                         :passwd => "A.jWmslz",
                         :fname => "rss-tecsgen.xml",
                       },
                 2 => { :url => "https://nlightsystem.com/trac/mypz/login?referer=%2Ftrac%2Fmypz%2Freport%2F1%3Fasc%3D1%26format%3Drss",
                         :user => "kominami",
                         :passwd => "genken1967",
                         :fname => "rss-mypz.xml",
                       },
                 22 => { :url => "https://nlightsystem.com/trac/mypz/login?referer=%2Ftrac%2Fmypz%2Freport%2F1%3Fasc%3D1%26format%3Drss",
                         :user => "kominami",
                         :passwd => "genken1967",
                         :fname => "rss-mypz-2.xml",
                       },
               }
    def initialize( index )
      hash = @@config[index]
      pp hash
      @url = hash[:url]
      @user = hash[:user]
      @passwd = hash[:passwd]
      @fname = hash[:fname]
    end

    def get
      if @user != nil and @passwd != nil
        @content = open(@url, http_basic_authentication: [@user, @passwd]).read
      else
        @content = open(@url).read
      end
      
      self
    end

    def save
      File.open( @fname , 'w' , {encoding: Encoding::UTF_8} ){|f|
        f.write( @content )
      }
      
      self
    end

    def read_from_file
      File.open( @fname , 'r' , {encoding: Encoding::UTF_8} ){|f|
        @content = f.read
      }
      
      self
    end

    def parse( validation=true )
      @rss = RSS::Parser.parse(@content,validation)
      
      self
    end

    def print_title_list
      @rss.channel.items.each do |x|
        puts x.title
      end
    end

    def print_all_items
      @rss.items.map{|item|
        puts item.pubDate.strftime( "%Y/%m/%d" )
        puts item.category.content
        puts item.title
        puts item.link
        puts item.description
        puts
      }
    end
  end
end

#rssop = Rssop::Rssop.new(2)
#rssop.get.save.parse.print_title_list
rssop = Rssop::Rssop.new(22)
rssop.get.save.parse(false).print_all_items
#rssop.read_from_file.parse(false).print_title_list
#rssop.read_from_file.parse(false).print_all_items

